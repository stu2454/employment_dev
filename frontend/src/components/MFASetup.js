import React, { useState, useEffect } from "react";
import axios from "axios";
import { TextField, Button, Container, Typography, Alert } from "@mui/material";

const BACKEND_URL = process.env.REACT_APP_API_URL;

const MFASetup = ({ email, tutorialVideoUrl = "https://www.youtube.com/embed/UwXTtKdyE7g" }) => {
  const [qrCode, setQrCode] = useState("");
  const [otp, setOtp] = useState("");
  const [mfaMessage, setMfaMessage] = useState("");
  const [showVideo, setShowVideo] = useState(false);

  useEffect(() => {
    const generateQRCode = async () => {
      try {
        //const response = await axios.post("http://localhost:5005/api/mfa/generate", { email });
        const response = await axios.post(`${BACKEND_URL}/api/mfa/generate`, { email });
        if (response.data.qrCode) {
          setQrCode(response.data.qrCode);
        }
      } catch (error) {
        console.error("Error generating QR code:", error);
      }
    };

    generateQRCode();
  }, [email]);

  const handleVerifyMFA = async () => {
    try {
      //const response = await axios.post("http://localhost:5005/api/mfa/verify", { email, otp });
      const response = await axios.post(`${BACKEND_URL}/api/mfa/verify`, { email, otp });

      if (response.data.message === "MFA verified successfully.") {
        setMfaMessage("MFA verified successfully.");
      } else {
        setMfaMessage("Failed to verify MFA. Please try again.");
      }
    } catch (error) {
      console.error("Error verifying MFA:", error);
      setMfaMessage("Failed to verify MFA. Please try again.");
    }
  };

  return (
    <Container maxWidth="sm" style={{ marginTop: "20px", padding: "20px", backgroundColor: "#f9f9f9" }}>
      <Typography variant="h5" component="h2" gutterBottom>
        Set Up Multi-Factor Authentication (MFA)
      </Typography>
      <Typography variant="body1" gutterBottom>
        Multi-Factor Authentication (MFA) enhances your account security. Follow these steps:
      </Typography>
      <ol>
        <li>Download the <b>Microsoft Authenticator</b> app.</li>
        <li>Open the app and select "Add Account" or "+" to scan a QR code.</li>
        <li>Scan the QR code displayed below.</li>
        <li>Enter the OTP (One-Time Password) generated by the app to verify your setup.</li>
      </ol>

      {qrCode ? (
        <img
          src={qrCode}
          alt="MFA QR Code"
          style={{ margin: "20px auto", width: "200px", display: "block" }}
        />
      ) : (
        <Typography color="error">QR Code not available. Please try again later.</Typography>
      )}

      <Button
        variant="outlined"
        color="primary"
        onClick={() => setShowVideo((prev) => !prev)}
        style={{ margin: "20px 0" }}
        fullWidth
      >
        {showVideo ? "Hide Tutorial Video" : "Show Tutorial Video"}
      </Button>

      {showVideo && (
        <div style={{ position: "relative", paddingTop: "56.25%", marginBottom: "20px" }}>
          <iframe
            src={tutorialVideoUrl}
            title="How to Set Up Microsoft Authenticator"
            frameBorder="0"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
            allowFullScreen
            style={{
              position: "absolute",
              top: 0,
              left: 0,
              width: "100%",
              height: "100%",
            }}
          ></iframe>
        </div>
      )}

      <TextField
        label="Enter OTP"
        fullWidth
        value={otp}
        onChange={(e) => setOtp(e.target.value)}
        style={{ margin: "20px 0" }}
      />
      <Button variant="contained" color="secondary" onClick={handleVerifyMFA} fullWidth>
        Verify OTP
      </Button>

      {mfaMessage && (
        <Alert severity={mfaMessage === "MFA verified successfully." ? "success" : "error"} style={{ marginTop: "20px" }}>
          {mfaMessage}
        </Alert>
      )}
    </Container>
  );
};

export default MFASetup;
